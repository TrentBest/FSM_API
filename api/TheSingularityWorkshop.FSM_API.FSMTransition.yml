### YamlMime:ManagedReference
items:
- uid: TheSingularityWorkshop.FSM_API.FSMTransition
  commentId: T:TheSingularityWorkshop.FSM_API.FSMTransition
  id: FSMTransition
  parent: TheSingularityWorkshop.FSM_API
  children:
  - TheSingularityWorkshop.FSM_API.FSMTransition.#ctor(System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean})
  - TheSingularityWorkshop.FSM_API.FSMTransition.Condition
  - TheSingularityWorkshop.FSM_API.FSMTransition.From
  - TheSingularityWorkshop.FSM_API.FSMTransition.To
  - TheSingularityWorkshop.FSM_API.FSMTransition.ToString
  langs:
  - csharp
  - vb
  name: FSMTransition
  nameWithType: FSMTransition
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition
  type: Class
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: FSMTransition
    path: FSM_API/FSMTransition.cs
    startLine: 22
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    This class represents a single **"transition rule"** in your FSM (Finite State Machine) blueprint.

    Think of it as a specific pathway 🛤️ that tells your FSM how to move from one "state"

    (like "Idle") to another "state" (like "Running").
  remarks: >-
    Each transition rule has three main parts:

    <ul><li><span class="term">From:</span>The starting state.</li><li><span class="term">To:</span>The ending state.</li><li><span class="term">Condition:</span>A special check that must be true for the transition to happen.</li></ul>

    <p>

    While you'll often create these transitions easily using the FSMBuilder,

    this class is made public for more advanced users who might need to

    load FSM definitions from files or perform very specific tweaks.

    </p>
  example: []
  syntax:
    content: public class FSMTransition
    content.vb: Public Class FSMTransition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.From
  commentId: P:TheSingularityWorkshop.FSM_API.FSMTransition.From
  id: From
  parent: TheSingularityWorkshop.FSM_API.FSMTransition
  langs:
  - csharp
  - vb
  name: From
  nameWithType: FSMTransition.From
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.From
  type: Property
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: From
    path: FSM_API/FSMTransition.cs
    startLine: 27
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: This is the **name of the state** where this transition starts.
  example: []
  syntax:
    content: public string From { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property From As String
  overload: TheSingularityWorkshop.FSM_API.FSMTransition.From*
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.To
  commentId: P:TheSingularityWorkshop.FSM_API.FSMTransition.To
  id: To
  parent: TheSingularityWorkshop.FSM_API.FSMTransition
  langs:
  - csharp
  - vb
  name: To
  nameWithType: FSMTransition.To
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.To
  type: Property
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: To
    path: FSM_API/FSMTransition.cs
    startLine: 32
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: This is the **name of the state** where this transition leads to.
  example: []
  syntax:
    content: public string To { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [To] As String
  overload: TheSingularityWorkshop.FSM_API.FSMTransition.To*
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.Condition
  commentId: P:TheSingularityWorkshop.FSM_API.FSMTransition.Condition
  id: Condition
  parent: TheSingularityWorkshop.FSM_API.FSMTransition
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: FSMTransition.Condition
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.Condition
  type: Property
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: Condition
    path: FSM_API/FSMTransition.cs
    startLine: 43
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    This is the **condition** (a function that returns `true` or `false`)

    that must be true for this transition to actually happen.
  remarks: >-
    This function receives an <xref href="TheSingularityWorkshop.FSM_API.IStateContext" data-throw-if-not-resolved="false"></xref>, which provides

    important information about the FSM's current situation,

    helping the condition decide if the transition should occur.
  example: []
  syntax:
    content: public Func<IStateContext, bool> Condition { get; set; }
    parameters: []
    return:
      type: System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
    content.vb: Public Property Condition As Func(Of IStateContext, Boolean)
  overload: TheSingularityWorkshop.FSM_API.FSMTransition.Condition*
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.#ctor(System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean})
  commentId: M:TheSingularityWorkshop.FSM_API.FSMTransition.#ctor(System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean})
  id: '#ctor(System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean})'
  parent: TheSingularityWorkshop.FSM_API.FSMTransition
  langs:
  - csharp
  - vb
  name: FSMTransition(string, string, Func<IStateContext, bool>)
  nameWithType: FSMTransition.FSMTransition(string, string, Func<IStateContext, bool>)
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.FSMTransition(string, string, System.Func<TheSingularityWorkshop.FSM_API.IStateContext, bool>)
  type: Constructor
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: .ctor
    path: FSM_API/FSMTransition.cs
    startLine: 67
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Creates a new transition rule for your FSM blueprint.
  remarks: >-
    When you create a transition, you must tell it:

    <ul><li><span class="term">Where it starts (`from`):</span>The state you're leaving.</li><li><span class="term">Where it goes (`to`):</span>The state you're entering.</li><li><span class="term">What makes it happen (`condition`):</span>The rule that must be true.</li></ul>
  example: []
  syntax:
    content: public FSMTransition(string from, string to, Func<IStateContext, bool> condition)
    parameters:
    - id: from
      type: System.String
      description: The name of the state this transition starts from.
    - id: to
      type: System.String
      description: The name of the state this transition moves to.
    - id: condition
      type: System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
      description: The function that decides if this transition should happen.
    content.vb: Public Sub New(from As String, [to] As String, condition As Func(Of IStateContext, Boolean))
  overload: TheSingularityWorkshop.FSM_API.FSMTransition.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      This happens if the `from` or `to` state names are empty or just spaces.

      It means you haven't given valid names for the states.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: >-
      This happens if you don't provide a `condition` (it's `null`).

      A transition always needs a rule to decide when to move.
  nameWithType.vb: FSMTransition.New(String, String, Func(Of IStateContext, Boolean))
  fullName.vb: TheSingularityWorkshop.FSM_API.FSMTransition.New(String, String, System.Func(Of TheSingularityWorkshop.FSM_API.IStateContext, Boolean))
  name.vb: New(String, String, Func(Of IStateContext, Boolean))
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.ToString
  commentId: M:TheSingularityWorkshop.FSM_API.FSMTransition.ToString
  id: ToString
  parent: TheSingularityWorkshop.FSM_API.FSMTransition
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FSMTransition.ToString()
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.ToString()
  type: Method
  source:
    remote:
      path: FSM_API/FSMTransition.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: ToString
    path: FSM_API/FSMTransition.cs
    startLine: 94
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Gives a simple text description of this transition rule.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        A string that looks like "StartingState --[Condition]--&gt; EndingState".

        It helps you quickly see what the transition does.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: TheSingularityWorkshop.FSM_API.FSMTransition.ToString*
references:
- uid: TheSingularityWorkshop.FSM_API
  commentId: N:TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.html
  name: TheSingularityWorkshop.FSM_API
  nameWithType: TheSingularityWorkshop.FSM_API
  fullName: TheSingularityWorkshop.FSM_API
  spec.csharp:
  - uid: TheSingularityWorkshop
    name: TheSingularityWorkshop
    href: TheSingularityWorkshop.html
  - name: .
  - uid: TheSingularityWorkshop.FSM_API
    name: FSM_API
    href: TheSingularityWorkshop.FSM_API.html
  spec.vb:
  - uid: TheSingularityWorkshop
    name: TheSingularityWorkshop
    href: TheSingularityWorkshop.html
  - name: .
  - uid: TheSingularityWorkshop.FSM_API
    name: FSM_API
    href: TheSingularityWorkshop.FSM_API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.From*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSMTransition.From
  href: TheSingularityWorkshop.FSM_API.FSMTransition.html#TheSingularityWorkshop_FSM_API_FSMTransition_From
  name: From
  nameWithType: FSMTransition.From
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.From
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.To*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSMTransition.To
  href: TheSingularityWorkshop.FSM_API.FSMTransition.html#TheSingularityWorkshop_FSM_API_FSMTransition_To
  name: To
  nameWithType: FSMTransition.To
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.To
- uid: TheSingularityWorkshop.FSM_API.IStateContext
  commentId: T:TheSingularityWorkshop.FSM_API.IStateContext
  parent: TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.FSM_API.IStateContext.html
  name: IStateContext
  nameWithType: IStateContext
  fullName: TheSingularityWorkshop.FSM_API.IStateContext
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.Condition*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSMTransition.Condition
  href: TheSingularityWorkshop.FSM_API.FSMTransition.html#TheSingularityWorkshop_FSM_API_FSMTransition_Condition
  name: Condition
  nameWithType: FSMTransition.Condition
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.Condition
- uid: System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
  commentId: T:System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IStateContext, bool>
  nameWithType: Func<IStateContext, bool>
  fullName: System.Func<TheSingularityWorkshop.FSM_API.IStateContext, bool>
  nameWithType.vb: Func(Of IStateContext, Boolean)
  fullName.vb: System.Func(Of TheSingularityWorkshop.FSM_API.IStateContext, Boolean)
  name.vb: Func(Of IStateContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.#ctor*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSMTransition.#ctor
  href: TheSingularityWorkshop.FSM_API.FSMTransition.html#TheSingularityWorkshop_FSM_API_FSMTransition__ctor_System_String_System_String_System_Func_TheSingularityWorkshop_FSM_API_IStateContext_System_Boolean__
  name: FSMTransition
  nameWithType: FSMTransition.FSMTransition
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.FSMTransition
  nameWithType.vb: FSMTransition.New
  fullName.vb: TheSingularityWorkshop.FSM_API.FSMTransition.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSMTransition.ToString*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSMTransition.ToString
  href: TheSingularityWorkshop.FSM_API.FSMTransition.html#TheSingularityWorkshop_FSM_API_FSMTransition_ToString
  name: ToString
  nameWithType: FSMTransition.ToString
  fullName: TheSingularityWorkshop.FSM_API.FSMTransition.ToString
