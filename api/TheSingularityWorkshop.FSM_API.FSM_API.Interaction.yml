### YamlMime:ManagedReference
items:
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  commentId: T:TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  id: FSM_API.Interaction
  parent: TheSingularityWorkshop.FSM_API
  children:
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM(System.String,System.String,System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition(System.String,System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean},System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine(System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance(TheSingularityWorkshop.FSM_API.FSMHandle)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists(System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames(System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition(System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance(System.String,TheSingularityWorkshop.FSM_API.IStateContext,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances(System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup(System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM(System.String,System.String,System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition(System.String,System.String,System.String,System.String)
  - TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
  langs:
  - csharp
  - vb
  name: FSM_API.Interaction
  nameWithType: FSM_API.Interaction
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  type: Class
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: Interaction
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 40
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Provides a set of methods for interacting with and managing FSM definitions and instances at runtime.

    This includes querying their existence, retrieving instances, ticking processing groups,

    and destroying definitions or individual instances.
  remarks: >-
    This static class groups all operations related to the lifecycle and real-time management

    of FSMs once they have been defined and instantiated. It serves as the primary

    interface for monitoring and controlling your FSMs after their initial setup.
  example: []
  syntax:
    content: public static class FSM_API.Interaction
    content.vb: Public Module FSM_API.Interaction
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM(System.String,System.String,System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM(System.String,System.String,System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.String)
  id: AddStateToFSM(System.String,System.String,System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.Action{TheSingularityWorkshop.FSM_API.IStateContext},System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: AddStateToFSM(string, string, Action<IStateContext>, Action<IStateContext>, Action<IStateContext>, string)
  nameWithType: FSM_API.Interaction.AddStateToFSM(string, string, Action<IStateContext>, Action<IStateContext>, Action<IStateContext>, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM(string, string, System.Action<TheSingularityWorkshop.FSM_API.IStateContext>, System.Action<TheSingularityWorkshop.FSM_API.IStateContext>, System.Action<TheSingularityWorkshop.FSM_API.IStateContext>, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: AddStateToFSM
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 82
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Dynamically adds a new state definition to an existing Finite State Machine blueprint

    at runtime.
  remarks: >-
    This method allows you to extend the behavior of an FSM after it has been defined.

    It internally uses an <xref href="TheSingularityWorkshop.FSM_API.FSMModifier" data-throw-if-not-resolved="false"></xref> to apply the changes.

    If a state with the given <code class="paramref">stateName</code> already exists in the FSM,

    its <code>onEnter</code>, <code>onUpdate</code>, and <code>onExit</code> actions will be updated.

    All active instances of this FSM definition will immediately reflect the added or

    updated state when they attempt to transition to or from it, or if they are

    currently in that state and its actions are modified.
  example: []
  syntax:
    content: public static void AddStateToFSM(string fsmName, string stateName, Action<IStateContext> onEnter, Action<IStateContext> onUpdate, Action<IStateContext> onExit, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The unique name of the FSM blueprint to which the state will be added or updated.
    - id: stateName
      type: System.String
      description: The name of the state to add or update. This must be unique within the FSM.
    - id: onEnter
      type: System.Action{TheSingularityWorkshop.FSM_API.IStateContext}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> to execute when an FSM instance enters this state. Can be <code>null</code>.
    - id: onUpdate
      type: System.Action{TheSingularityWorkshop.FSM_API.IStateContext}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> to execute when an FSM instance is in this state during an <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)" data-throw-if-not-resolved="false"></xref> call. Can be <code>null</code>.
    - id: onExit
      type: System.Action{TheSingularityWorkshop.FSM_API.IStateContext}
      description: An <xref href="System.Action%601" data-throw-if-not-resolved="false"></xref> to execute when an FSM instance exits this state. Can be <code>null</code>.
    - id: processingGroup
      type: System.String
      description: The name of the processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    content.vb: Public Shared Sub AddStateToFSM(fsmName As String, stateName As String, onEnter As Action(Of IStateContext), onUpdate As Action(Of IStateContext), onExit As Action(Of IStateContext), processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code>, <code class="paramref">stateName</code>, or <code class="paramref">processingGroup</code>

      is null, empty, or consists only of white-space characters.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: >-
      Thrown if the FSM definition specified by <code class="paramref">fsmName</code> and <code class="paramref">processingGroup</code>

      cannot be found.
  nameWithType.vb: FSM_API.Interaction.AddStateToFSM(String, String, Action(Of IStateContext), Action(Of IStateContext), Action(Of IStateContext), String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM(String, String, System.Action(Of TheSingularityWorkshop.FSM_API.IStateContext), System.Action(Of TheSingularityWorkshop.FSM_API.IStateContext), System.Action(Of TheSingularityWorkshop.FSM_API.IStateContext), String)
  name.vb: AddStateToFSM(String, String, Action(Of IStateContext), Action(Of IStateContext), Action(Of IStateContext), String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition(System.String,System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean},System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition(System.String,System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean},System.String)
  id: AddTransition(System.String,System.String,System.String,System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean},System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: AddTransition(string, string, string, Func<IStateContext, bool>, string)
  nameWithType: FSM_API.Interaction.AddTransition(string, string, string, Func<IStateContext, bool>, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition(string, string, string, System.Func<TheSingularityWorkshop.FSM_API.IStateContext, bool>, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: AddTransition
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 152
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Dynamically adds a new transition between two states to an existing Finite State Machine blueprint.
  remarks: >-
    This method internally uses an <xref href="TheSingularityWorkshop.FSM_API.FSMModifier" data-throw-if-not-resolved="false"></xref> to apply the changes.

    This allows for changing the flow of your FSMs at runtime. If a transition

    from <code class="paramref">fromState</code> to <code class="paramref">toState</code> with the exact

    same condition already exists, it will be updated with the new <code class="paramref">condition</code>.
  example: []
  syntax:
    content: public static void AddTransition(string fsmName, string fromState, string toState, Func<IStateContext, bool> condition, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The unique name of the FSM blueprint to which the transition will be added or updated.
    - id: fromState
      type: System.String
      description: >-
        The name of the state from which the transition originates. Use <xref href="TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier" data-throw-if-not-resolved="false"></xref>

        to define a transition that can occur from any state.
    - id: toState
      type: System.String
      description: The name of the state to which the transition leads.
    - id: condition
      type: System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
      description: >-
        A <xref href="System.Func%602" data-throw-if-not-resolved="false"></xref> that returns <code>true</code> when the transition should occur.

        This function operates on the <xref href="TheSingularityWorkshop.FSM_API.IStateContext" data-throw-if-not-resolved="false"></xref>.
    - id: processingGroup
      type: System.String
      description: The name of the processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    content.vb: Public Shared Sub AddTransition(fsmName As String, fromState As String, toState As String, condition As Func(Of IStateContext, Boolean), processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code>, <code class="paramref">fromState</code>, <code class="paramref">toState</code>,

      or <code class="paramref">processingGroup</code> is null, empty, or consists only of white-space characters,

      or if <code class="paramref">condition</code> is <code>null</code>.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: >-
      Thrown if the FSM definition specified by <code class="paramref">fsmName</code> and <code class="paramref">processingGroup</code>

      cannot be found.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: >-
      Thrown if <code class="paramref">fromState</code> or <code class="paramref">toState</code> does not exist within the FSM's defined states,

      unless <code class="paramref">fromState</code> is <xref href="TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: FSM_API.Interaction.AddTransition(String, String, String, Func(Of IStateContext, Boolean), String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition(String, String, String, System.Func(Of TheSingularityWorkshop.FSM_API.IStateContext, Boolean), String)
  name.vb: AddTransition(String, String, String, Func(Of IStateContext, Boolean), String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine(System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine(System.String,System.String)
  id: DestroyFiniteStateMachine(System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: DestroyFiniteStateMachine(string, string)
  nameWithType: FSM_API.Interaction.DestroyFiniteStateMachine(string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine(string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: DestroyFiniteStateMachine
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 208
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Removes a registered FSM definition and all its associated active instances

    from a specific processing group. This effectively unregisters the FSM blueprint

    and frees up resources for all its derived instances.
  remarks: >-
    This is a **destructive operation** for a specific FSM type. All current instances

    of this FSM definition will cease to be managed by the API. Their <xref href="TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle" data-throw-if-not-resolved="false"></xref>

    method will be called to ensure proper <code>OnExit</code> logic is executed.

    Memory will then be eligible for garbage collection once all external references are released.

    If the FSM definition or group does not exist, a warning will be logged via <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String%2cSystem.Exception)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void DestroyFiniteStateMachine(string fsmName, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The name of the FSM definition to destroy.
    - id: processingGroup
      type: System.String
      description: The processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    content.vb: Public Shared Sub DestroyFiniteStateMachine(fsmName As String, processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code> or <code class="paramref">processingGroup</code> is null, empty,

      or consists only of white-space characters.
  nameWithType.vb: FSM_API.Interaction.DestroyFiniteStateMachine(String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine(String, String)
  name.vb: DestroyFiniteStateMachine(String, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists(System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists(System.String,System.String)
  id: Exists(System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: Exists(string, string)
  nameWithType: FSM_API.Interaction.Exists(string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists(string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: Exists
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 264
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Checks if an FSM definition with the given name exists within the specified processing group.

    This is useful for verifying if an FSM blueprint has been registered before attempting

    to create instances or modify its definition.
  example: []
  syntax:
    content: public static bool Exists(string fsmName, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The unique name of the FSM definition to check for existence.
    - id: processingGroup
      type: System.String
      description: The name of the processing group to search within. Defaults to <code>"Update"</code>.
    return:
      type: System.Boolean
      description: <code>true</code> if the FSM definition exists in the specified group; otherwise, <code>false</code>.
    content.vb: Public Shared Function Exists(fsmName As String, processingGroup As String = "Update") As Boolean
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code> or <code class="paramref">processingGroup</code> is null, empty,

      or consists only of white-space characters.
  nameWithType.vb: FSM_API.Interaction.Exists(String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists(String, String)
  name.vb: Exists(String, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames(System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames(System.String)
  id: GetAllDefinitionNames(System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: GetAllDefinitionNames(string)
  nameWithType: FSM_API.Interaction.GetAllDefinitionNames(string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames(string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: GetAllDefinitionNames
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 299
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Retrieves the names of all FSM definitions currently registered

    within a specific processing group. This is useful for introspection, debugging, or

    for building dynamic UI elements that list available FSMs.
  example: []
  syntax:
    content: public static IReadOnlyCollection<string> GetAllDefinitionNames(string processingGroup = "Update")
    parameters:
    - id: processingGroup
      type: System.String
      description: The name of the processing group to query for FSM definitions. Defaults to <code>"Update"</code>.
    return:
      type: System.Collections.Generic.IReadOnlyCollection{System.String}
      description: >-
        A read-only collection of strings, where each string is the name of an FSM definition.

        If the processing group does not exist, an empty collection is returned.
    content.vb: Public Shared Function GetAllDefinitionNames(processingGroup As String = "Update") As IReadOnlyCollection(Of String)
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">processingGroup</code> is null, empty, or consists only of white-space characters.
  nameWithType.vb: FSM_API.Interaction.GetAllDefinitionNames(String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames(String)
  name.vb: GetAllDefinitionNames(String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances(System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances(System.String,System.String)
  id: GetInstances(System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: GetInstances(string, string)
  nameWithType: FSM_API.Interaction.GetInstances(string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances(string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: GetInstances
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 341
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Retrieves all active, live instances of a specific FSM definition

    within a given processing group.
  remarks: >-
    Each <xref href="TheSingularityWorkshop.FSM_API.FSMHandle" data-throw-if-not-resolved="false"></xref> in the returned list represents a currently

    running Finite State Machine, bound to its own unique context object.

    This method allows you to inspect, manage, or interact with all live

    applications of a particular FSM blueprint.
  example: []
  syntax:
    content: public static IReadOnlyList<FSMHandle> GetInstances(string fsmName, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The name of the FSM definition whose active instances you want to retrieve.
    - id: processingGroup
      type: System.String
      description: The name of the processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    return:
      type: System.Collections.Generic.IReadOnlyList{TheSingularityWorkshop.FSM_API.FSMHandle}
      description: >-
        A read-only list of <xref href="TheSingularityWorkshop.FSM_API.FSMHandle" data-throw-if-not-resolved="false"></xref> objects, each representing a live

        FSM instance derived from the specified definition.
    content.vb: Public Shared Function GetInstances(fsmName As String, processingGroup As String = "Update") As IReadOnlyList(Of FSMHandle)
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code> or <code class="paramref">processingGroup</code> is null, empty,

      or consists only of white-space characters.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: >-
      Thrown if the FSM definition specified by <code class="paramref">fsmName</code> and <code class="paramref">processingGroup</code>

      cannot be found. Ensure the FSM has been defined prior to attempting to retrieve its instances.
  nameWithType.vb: FSM_API.Interaction.GetInstances(String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances(String, String)
  name.vb: GetInstances(String, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup(System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup(System.String)
  id: RemoveProcessingGroup(System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: RemoveProcessingGroup(string)
  nameWithType: FSM_API.Interaction.RemoveProcessingGroup(string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup(string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: RemoveProcessingGroup
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 377
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Removes an entire FSM processing group from the system, along with all FSM definitions

    and all their active instances associated with that group.
  remarks: >-
    This is a **destructive operation**. Use this method carefully, typically when

    an entire subsystem or module that relies on a specific FSM processing group

    is being unloaded or shut down. All memory and resources tied to FSMs

    in this group will be released and they will no longer be managed by the API.

    If the group does not exist, a warning will be logged via <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String%2cSystem.Exception)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void RemoveProcessingGroup(string processingGroup)
    parameters:
    - id: processingGroup
      type: System.String
      description: The name of the processing group to remove.
    content.vb: Public Shared Sub RemoveProcessingGroup(processingGroup As String)
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">processingGroup</code> is null, empty, or consists only of white-space characters.
  nameWithType.vb: FSM_API.Interaction.RemoveProcessingGroup(String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup(String)
  name.vb: RemoveProcessingGroup(String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
  id: Update(System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: Update(string)
  nameWithType: FSM_API.Interaction.Update(string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: Update
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 442
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Advances the FSM instance by one logical step. This involves executing the 'OnUpdate'

    action of the <xref href="TheSingularityWorkshop.FSM_API.FSMHandle.CurrentState" data-throw-if-not-resolved="false"></xref> and evaluating all defined transitions

    from the <xref href="TheSingularityWorkshop.FSM_API.FSMHandle.CurrentState" data-throw-if-not-resolved="false"></xref>. If a valid transition is found, the FSM will

    move to the next state, executing 'OnExit' for the old state and 'OnEnter' for the new state.
  remarks: >-
    **The Crucial Step for FSM Processing:**

    This <code>Update()</code> method is fundamental to the operation of an FSM instance. Without

    it being called, the FSM will not execute its state's update logic, evaluate transitions,

    or progress through its defined states. An FSM definition, no matter how intricate,

    remains static until its instances are actively updated.


    **How FSMs are "Ticked":**

    This method is primarily designed to be invoked by the <code>FSM_API</code>'s internal management

    system (e.g., via <code>FSM_API.Interaction.TickAll(string processingGroup)</code>). The API

    manages the periodic invocation of this method for all registered FSM instances

    within a given processing group, respecting their defined <code>ProcessRate</code>.


    **CAUTION: Manual Invocation (Advanced Use Only):**

    While publicly accessible, directly calling <code>Update()</code> manually from your application code

    should only be done by developers who possess a deep understanding of the FSM's internal

    processing cycle and lifecycle management. Manual invocation outside of the

    <code>FSM_API</code>'s managed loop can lead to:

    <ul><li>Unpredictable state behavior due to uncontrolled update rates.</li><li>Performance issues if not integrated into an efficient game loop or update scheduler.</li><li>Conflicts with the <code>FSM_API</code>'s internal error handling and instance management.</li></ul>

    Use with extreme care and only when building a highly customized, self-managed FSM update system.
  example: []
  syntax:
    content: public static void Update(string processingGroup = "Update")
    parameters:
    - id: processingGroup
      type: System.String
      description: 'Optional: A string identifying the process group for error reporting, defaults to "Update".'
    content.vb: Public Shared Sub Update(processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update*
  nameWithType.vb: FSM_API.Interaction.Update(String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(String)
  name.vb: Update(String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance(TheSingularityWorkshop.FSM_API.FSMHandle)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance(TheSingularityWorkshop.FSM_API.FSMHandle)
  id: DestroyInstance(TheSingularityWorkshop.FSM_API.FSMHandle)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: DestroyInstance(FSMHandle)
  nameWithType: FSM_API.Interaction.DestroyInstance(FSMHandle)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance(TheSingularityWorkshop.FSM_API.FSMHandle)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: DestroyInstance
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 484
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: >-
    Unregisters a specific FSM instance from the system, allowing it to be garbage collected

    if no other references exist. This method searches across all active FSM definitions

    in all groups to find and deregister the instance.
  remarks: >-
    Use this method when a particular object managed by an FSM is no longer needed

    or is being destroyed (e.g., a game object being despawned), but its FSM definition

    might still be in use by other instances.

    <p>

    The instance's <xref href="TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle" data-throw-if-not-resolved="false"></xref> method will be called to ensure

    any <code>OnExit</code> logic for its current state is executed before it is removed

    from management.

    </p>

    If the instance is not found (e.g., it was already unregistered or never registered),

    a warning will be logged via <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String%2cSystem.Exception)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void DestroyInstance(FSMHandle instance)
    parameters:
    - id: instance
      type: TheSingularityWorkshop.FSM_API.FSMHandle
      description: The <xref href="TheSingularityWorkshop.FSM_API.FSMHandle" data-throw-if-not-resolved="false"></xref> of the specific live FSM instance to unregister.
    content.vb: Public Shared Sub DestroyInstance(instance As FSMHandle)
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown if the provided <code class="paramref">instance</code> is <code>null</code>.
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM(System.String,System.String,System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM(System.String,System.String,System.String,System.String)
  id: RemoveStateFromFSM(System.String,System.String,System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: RemoveStateFromFSM(string, string, string, string)
  nameWithType: FSM_API.Interaction.RemoveStateFromFSM(string, string, string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM(string, string, string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: RemoveStateFromFSM
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 569
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Dynamically removes a state definition from an existing Finite State Machine blueprint at runtime.
  remarks: >-
    This method internally uses an <xref href="TheSingularityWorkshop.FSM_API.FSMModifier" data-throw-if-not-resolved="false"></xref> to apply the changes.

    <p>

    When a state is removed, any active FSM instances currently in that state will be

    immediately transitioned. The transition target is determined as follows:

    <ul><li>If a valid <code class="paramref">fallbackStateName</code> is provided, instances will transition to that state.</li><li>If <code class="paramref">fallbackStateName</code> is null, empty, or consists only of white-space,
              instances will instead transition to the FSM's <xref href="TheSingularityWorkshop.FSM_API.FSM.InitialState" data-throw-if-not-resolved="false"></xref>.</li></ul>
    The `OnExit` action of the removed state will be called, followed by the `OnEnter` action

    of the determined fallback or initial state.

    </p>

    <p>

    If the specified state to remove does not exist in the FSM, a warning will be logged

    via <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String%2cSystem.Exception)" data-throw-if-not-resolved="false"></xref>.

    </p>
  example: []
  syntax:
    content: public static void RemoveStateFromFSM(string fsmName, string stateName, string fallbackStateName, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The unique name of the FSM blueprint from which the state will be removed.
    - id: stateName
      type: System.String
      description: The name of the state to remove.
    - id: fallbackStateName
      type: System.String
      description: >-
        Optional: The name of the state to transition existing FSM instances to if they are

        currently in the state being removed. If not provided (null or empty), instances

        will default to transitioning to the FSM's <xref href="TheSingularityWorkshop.FSM_API.FSM.InitialState" data-throw-if-not-resolved="false"></xref>.
    - id: processingGroup
      type: System.String
      description: The name of the processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    content.vb: Public Shared Sub RemoveStateFromFSM(fsmName As String, stateName As String, fallbackStateName As String, processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code>, <code class="paramref">stateName</code>, or <code class="paramref">processingGroup</code>

      is null, empty, or consists only of white-space characters.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: >-
      Thrown if the FSM definition specified by <code class="paramref">fsmName</code> and <code class="paramref">processingGroup</code>

      cannot be found.
  nameWithType.vb: FSM_API.Interaction.RemoveStateFromFSM(String, String, String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM(String, String, String, String)
  name.vb: RemoveStateFromFSM(String, String, String, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition(System.String,System.String,System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition(System.String,System.String,System.String,System.String)
  id: RemoveTransition(System.String,System.String,System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: RemoveTransition(string, string, string, string)
  nameWithType: FSM_API.Interaction.RemoveTransition(string, string, string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition(string, string, string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: RemoveTransition
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 638
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Dynamically removes a specific transition between two states from an existing Finite State Machine blueprint.
  remarks: >-
    This method internally uses an <xref href="TheSingularityWorkshop.FSM_API.FSMModifier" data-throw-if-not-resolved="false"></xref> to apply the changes.

    This allows for removing unwanted or obsolete paths in your FSM's logic at runtime.

    If the specified transition does not exist, a warning will be logged via <xref href="TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String%2cSystem.Exception)" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static void RemoveTransition(string fsmName, string fromState, string toState, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: The unique name of the FSM blueprint from which the transition will be removed.
    - id: fromState
      type: System.String
      description: >-
        The name of the state from which the transition originates. Use <xref href="TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier" data-throw-if-not-resolved="false"></xref>

        to remove a transition that occurs from any state.
    - id: toState
      type: System.String
      description: The name of the state to which the transition leads.
    - id: processingGroup
      type: System.String
      description: The name of the processing group where the FSM definition is registered. Defaults to <code>"Update"</code>.
    content.vb: Public Shared Sub RemoveTransition(fsmName As String, fromState As String, toState As String, processingGroup As String = "Update")
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: >-
      Thrown if <code class="paramref">fsmName</code>, <code class="paramref">fromState</code>, <code class="paramref">toState</code>,

      or <code class="paramref">processingGroup</code> is null, empty, or consists only of white-space characters.
  - type: System.Collections.Generic.KeyNotFoundException
    commentId: T:System.Collections.Generic.KeyNotFoundException
    description: >-
      Thrown if the FSM definition specified by <code class="paramref">fsmName</code> and <code class="paramref">processingGroup</code>

      cannot be found.
  nameWithType.vb: FSM_API.Interaction.RemoveTransition(String, String, String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition(String, String, String, String)
  name.vb: RemoveTransition(String, String, String, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance(System.String,TheSingularityWorkshop.FSM_API.IStateContext,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance(System.String,TheSingularityWorkshop.FSM_API.IStateContext,System.String)
  id: GetInstance(System.String,TheSingularityWorkshop.FSM_API.IStateContext,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: GetInstance(string, IStateContext, string)
  nameWithType: FSM_API.Interaction.GetInstance(string, IStateContext, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance(string, TheSingularityWorkshop.FSM_API.IStateContext, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: GetInstance
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 684
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Retrieves a live <xref href="TheSingularityWorkshop.FSM_API.FSMHandle" data-throw-if-not-resolved="false"></xref> for a specific FSM instance.
  remarks: >-
    This is the primary public method to access an existing, running FSM instance.

    It uses the provided FSM name, the unique context object associated with the instance,

    and its processing group to locate and return the correct handle. This allows you

    to check the FSM's current state or manually trigger a transition from outside

    of the FSM's own logic.
  example: []
  syntax:
    content: public static FSMHandle GetInstance(string testFsmName, IStateContext context, string processingGroup)
    parameters:
    - id: testFsmName
      type: System.String
      description: The name of the FSM blueprint, e.g., "PlayerMovementFSM".
    - id: context
      type: TheSingularityWorkshop.FSM_API.IStateContext
      description: >-
        The unique context object (e.g., your character controller or enemy AI object)
            that identifies a specific FSM instance.
    - id: processingGroup
      type: System.String
      description: The name of the group that this FSM instance belongs to.
    return:
      type: TheSingularityWorkshop.FSM_API.FSMHandle
      description: A valid <xref href="TheSingularityWorkshop.FSM_API.FSMHandle" data-throw-if-not-resolved="false"></xref> if a matching instance is found; otherwise, <code>null</code>.
    content.vb: Public Shared Function GetInstance(testFsmName As String, context As IStateContext, processingGroup As String) As FSMHandle
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance*
  nameWithType.vb: FSM_API.Interaction.GetInstance(String, IStateContext, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance(String, TheSingularityWorkshop.FSM_API.IStateContext, String)
  name.vb: GetInstance(String, IStateContext, String)
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition(System.String,System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition(System.String,System.String)
  id: GetFSMDefinition(System.String,System.String)
  parent: TheSingularityWorkshop.FSM_API.FSM_API.Interaction
  langs:
  - csharp
  - vb
  name: GetFSMDefinition(string, string)
  nameWithType: FSM_API.Interaction.GetFSMDefinition(string, string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition(string, string)
  type: Method
  source:
    remote:
      path: FSM_API/FSM_API.Interaction.cs
      branch: master
      repo: https://github.com/TrentBest/FSM_API.git
    id: GetFSMDefinition
    path: FSM_API/FSM_API.Interaction.cs
    startLine: 697
  assemblies:
  - FSM_API
  namespace: TheSingularityWorkshop.FSM_API
  summary: Returns the requested definition or a default FSM.
  example: []
  syntax:
    content: public static FSM GetFSMDefinition(string fsmName, string processingGroup = "Update")
    parameters:
    - id: fsmName
      type: System.String
      description: Name of the FSM Definition to Get
    - id: processingGroup
      type: System.String
      description: Name of the Processing Group to find the FSM in.
    return:
      type: TheSingularityWorkshop.FSM_API.FSM
      description: ''
    content.vb: Public Shared Function GetFSMDefinition(fsmName As String, processingGroup As String = "Update") As FSM
  overload: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: ''
  nameWithType.vb: FSM_API.Interaction.GetFSMDefinition(String, String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition(String, String)
  name.vb: GetFSMDefinition(String, String)
references:
- uid: TheSingularityWorkshop.FSM_API
  commentId: N:TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.html
  name: TheSingularityWorkshop.FSM_API
  nameWithType: TheSingularityWorkshop.FSM_API
  fullName: TheSingularityWorkshop.FSM_API
  spec.csharp:
  - uid: TheSingularityWorkshop
    name: TheSingularityWorkshop
    href: TheSingularityWorkshop.html
  - name: .
  - uid: TheSingularityWorkshop.FSM_API
    name: FSM_API
    href: TheSingularityWorkshop.FSM_API.html
  spec.vb:
  - uid: TheSingularityWorkshop
    name: TheSingularityWorkshop
    href: TheSingularityWorkshop.html
  - name: .
  - uid: TheSingularityWorkshop.FSM_API
    name: FSM_API
    href: TheSingularityWorkshop.FSM_API.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TheSingularityWorkshop.FSM_API.FSMModifier
  commentId: T:TheSingularityWorkshop.FSM_API.FSMModifier
  name: FSMModifier
  nameWithType: FSMModifier
  fullName: TheSingularityWorkshop.FSM_API.FSMModifier
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
  isExternal: true
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_Update_System_String_
  name: Update(string)
  nameWithType: FSM_API.Interaction.Update(string)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(string)
  nameWithType.vb: FSM_API.Interaction.Update(String)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(String)
  name.vb: Update(String)
  spec.csharp:
  - uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
    name: Update
    href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_Update_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update(System.String)
    name: Update
    href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_Update_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Collections.Generic.KeyNotFoundException
  commentId: T:System.Collections.Generic.KeyNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keynotfoundexception
  name: KeyNotFoundException
  nameWithType: KeyNotFoundException
  fullName: System.Collections.Generic.KeyNotFoundException
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_AddStateToFSM_System_String_System_String_System_Action_TheSingularityWorkshop_FSM_API_IStateContext__System_Action_TheSingularityWorkshop_FSM_API_IStateContext__System_Action_TheSingularityWorkshop_FSM_API_IStateContext__System_String_
  name: AddStateToFSM
  nameWithType: FSM_API.Interaction.AddStateToFSM
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddStateToFSM
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Action{TheSingularityWorkshop.FSM_API.IStateContext}
  commentId: T:System.Action{TheSingularityWorkshop.FSM_API.IStateContext}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<IStateContext>
  nameWithType: Action<IStateContext>
  fullName: System.Action<TheSingularityWorkshop.FSM_API.IStateContext>
  nameWithType.vb: Action(Of IStateContext)
  fullName.vb: System.Action(Of TheSingularityWorkshop.FSM_API.IStateContext)
  name.vb: Action(Of IStateContext)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier
  commentId: F:TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier
  href: TheSingularityWorkshop.FSM_API.FSM.html#TheSingularityWorkshop_FSM_API_FSM_AnyStateIdentifier
  name: AnyStateIdentifier
  nameWithType: FSM.AnyStateIdentifier
  fullName: TheSingularityWorkshop.FSM_API.FSM.AnyStateIdentifier
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: TheSingularityWorkshop.FSM_API.IStateContext
  commentId: T:TheSingularityWorkshop.FSM_API.IStateContext
  parent: TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.FSM_API.IStateContext.html
  name: IStateContext
  nameWithType: IStateContext
  fullName: TheSingularityWorkshop.FSM_API.IStateContext
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_AddTransition_System_String_System_String_System_String_System_Func_TheSingularityWorkshop_FSM_API_IStateContext_System_Boolean__System_String_
  name: AddTransition
  nameWithType: FSM_API.Interaction.AddTransition
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.AddTransition
- uid: System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
  commentId: T:System.Func{TheSingularityWorkshop.FSM_API.IStateContext,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IStateContext, bool>
  nameWithType: Func<IStateContext, bool>
  fullName: System.Func<TheSingularityWorkshop.FSM_API.IStateContext, bool>
  nameWithType.vb: Func(Of IStateContext, Boolean)
  fullName.vb: System.Func(Of TheSingularityWorkshop.FSM_API.IStateContext, Boolean)
  name.vb: Func(Of IStateContext, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: TheSingularityWorkshop.FSM_API.IStateContext
    name: IStateContext
    href: TheSingularityWorkshop.FSM_API.IStateContext.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle
  commentId: M:TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle
  name: DestroyHandle()
  nameWithType: FSMHandle.DestroyHandle()
  fullName: TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle()
  spec.csharp:
  - uid: TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle
    name: DestroyHandle
  - name: (
  - name: )
  spec.vb:
  - uid: TheSingularityWorkshop.FSM_API.FSMHandle.DestroyHandle
    name: DestroyHandle
  - name: (
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String,System.Exception)
  commentId: M:TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String,System.Exception)
  isExternal: true
  href: TheSingularityWorkshop.FSM_API.FSM_API.Error.html#TheSingularityWorkshop_FSM_API_FSM_API_Error_InvokeInternalApiError_System_String_System_Exception_
  name: InvokeInternalApiError(string, Exception)
  nameWithType: FSM_API.Error.InvokeInternalApiError(string, Exception)
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(string, System.Exception)
  nameWithType.vb: FSM_API.Error.InvokeInternalApiError(String, Exception)
  fullName.vb: TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(String, System.Exception)
  name.vb: InvokeInternalApiError(String, Exception)
  spec.csharp:
  - uid: TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String,System.Exception)
    name: InvokeInternalApiError
    href: TheSingularityWorkshop.FSM_API.FSM_API.Error.html#TheSingularityWorkshop_FSM_API_FSM_API_Error_InvokeInternalApiError_System_String_System_Exception_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
  spec.vb:
  - uid: TheSingularityWorkshop.FSM_API.FSM_API.Error.InvokeInternalApiError(System.String,System.Exception)
    name: InvokeInternalApiError
    href: TheSingularityWorkshop.FSM_API.FSM_API.Error.html#TheSingularityWorkshop_FSM_API_FSM_API_Error_InvokeInternalApiError_System_String_System_Exception_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Exception
    name: Exception
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.exception
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_DestroyFiniteStateMachine_System_String_System_String_
  name: DestroyFiniteStateMachine
  nameWithType: FSM_API.Interaction.DestroyFiniteStateMachine
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyFiniteStateMachine
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_Exists_System_String_System_String_
  name: Exists
  nameWithType: FSM_API.Interaction.Exists
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Exists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_GetAllDefinitionNames_System_String_
  name: GetAllDefinitionNames
  nameWithType: FSM_API.Interaction.GetAllDefinitionNames
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetAllDefinitionNames
- uid: System.Collections.Generic.IReadOnlyCollection{System.String}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<string>
  nameWithType: IReadOnlyCollection<string>
  fullName: System.Collections.Generic.IReadOnlyCollection<string>
  nameWithType.vb: IReadOnlyCollection(Of String)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of String)
  name.vb: IReadOnlyCollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: TheSingularityWorkshop.FSM_API.FSMHandle
  commentId: T:TheSingularityWorkshop.FSM_API.FSMHandle
  parent: TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.FSM_API.FSMHandle.html
  name: FSMHandle
  nameWithType: FSMHandle
  fullName: TheSingularityWorkshop.FSM_API.FSMHandle
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_GetInstances_System_String_System_String_
  name: GetInstances
  nameWithType: FSM_API.Interaction.GetInstances
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstances
- uid: System.Collections.Generic.IReadOnlyList{TheSingularityWorkshop.FSM_API.FSMHandle}
  commentId: T:System.Collections.Generic.IReadOnlyList{TheSingularityWorkshop.FSM_API.FSMHandle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<FSMHandle>
  nameWithType: IReadOnlyList<FSMHandle>
  fullName: System.Collections.Generic.IReadOnlyList<TheSingularityWorkshop.FSM_API.FSMHandle>
  nameWithType.vb: IReadOnlyList(Of FSMHandle)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of TheSingularityWorkshop.FSM_API.FSMHandle)
  name.vb: IReadOnlyList(Of FSMHandle)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: TheSingularityWorkshop.FSM_API.FSMHandle
    name: FSMHandle
    href: TheSingularityWorkshop.FSM_API.FSMHandle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: TheSingularityWorkshop.FSM_API.FSMHandle
    name: FSMHandle
    href: TheSingularityWorkshop.FSM_API.FSMHandle.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_RemoveProcessingGroup_System_String_
  name: RemoveProcessingGroup
  nameWithType: FSM_API.Interaction.RemoveProcessingGroup
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveProcessingGroup
- uid: TheSingularityWorkshop.FSM_API.FSMHandle.CurrentState
  commentId: P:TheSingularityWorkshop.FSM_API.FSMHandle.CurrentState
  href: TheSingularityWorkshop.FSM_API.FSMHandle.html#TheSingularityWorkshop_FSM_API_FSMHandle_CurrentState
  name: CurrentState
  nameWithType: FSMHandle.CurrentState
  fullName: TheSingularityWorkshop.FSM_API.FSMHandle.CurrentState
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_Update_System_String_
  name: Update
  nameWithType: FSM_API.Interaction.Update
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.Update
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_DestroyInstance_TheSingularityWorkshop_FSM_API_FSMHandle_
  name: DestroyInstance
  nameWithType: FSM_API.Interaction.DestroyInstance
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.DestroyInstance
- uid: TheSingularityWorkshop.FSM_API.FSM.InitialState
  commentId: P:TheSingularityWorkshop.FSM_API.FSM.InitialState
  href: TheSingularityWorkshop.FSM_API.FSM.html#TheSingularityWorkshop_FSM_API_FSM_InitialState
  name: InitialState
  nameWithType: FSM.InitialState
  fullName: TheSingularityWorkshop.FSM_API.FSM.InitialState
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_RemoveStateFromFSM_System_String_System_String_System_String_System_String_
  name: RemoveStateFromFSM
  nameWithType: FSM_API.Interaction.RemoveStateFromFSM
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveStateFromFSM
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_RemoveTransition_System_String_System_String_System_String_System_String_
  name: RemoveTransition
  nameWithType: FSM_API.Interaction.RemoveTransition
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.RemoveTransition
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_GetInstance_System_String_TheSingularityWorkshop_FSM_API_IStateContext_System_String_
  name: GetInstance
  nameWithType: FSM_API.Interaction.GetInstance
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetInstance
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notimplementedexception
  name: NotImplementedException
  nameWithType: NotImplementedException
  fullName: System.NotImplementedException
- uid: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition*
  commentId: Overload:TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition
  href: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.html#TheSingularityWorkshop_FSM_API_FSM_API_Interaction_GetFSMDefinition_System_String_System_String_
  name: GetFSMDefinition
  nameWithType: FSM_API.Interaction.GetFSMDefinition
  fullName: TheSingularityWorkshop.FSM_API.FSM_API.Interaction.GetFSMDefinition
- uid: TheSingularityWorkshop.FSM_API.FSM
  commentId: T:TheSingularityWorkshop.FSM_API.FSM
  parent: TheSingularityWorkshop.FSM_API
  href: TheSingularityWorkshop.FSM_API.FSM.html
  name: FSM
  nameWithType: FSM
  fullName: TheSingularityWorkshop.FSM_API.FSM
